<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1498.v33a_0c6f3a_4b_4">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2221.vc657003fb_d93"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2221.vc657003fb_d93">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.9.7">
      <gitLabConnection>ukkikki</gitLabConnection>
      <jobCredentialId></jobCredentialId>
      <useAlternativeCredential>false</useAlternativeCredential>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>MYSQL_URL</name>
          <defaultValue>i12c204.p.ssafy.io:3306/ukkikki</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MYSQL_USERNAME</name>
          <defaultValue>developer</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MYSQL_PASSWORD</name>
          <defaultValue>Cnacnsmsdhfkddnxks204!</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.9.7">
          <spec></spec>
          <triggerOnPush>true</triggerOnPush>
          <triggerToBranchDeleteRequest>false</triggerToBranchDeleteRequest>
          <triggerOnMergeRequest>true</triggerOnMergeRequest>
          <triggerOnlyIfNewCommitsPushed>false</triggerOnlyIfNewCommitsPushed>
          <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
          <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
          <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
          <triggerOnApprovedMergeRequest>true</triggerOnApprovedMergeRequest>
          <triggerOpenMergeRequestOnPush>never</triggerOpenMergeRequestOnPush>
          <triggerOnNoteRequest>true</triggerOnNoteRequest>
          <noteRegex>Jenkins please retry a build</noteRegex>
          <ciSkip>true</ciSkip>
          <skipWorkInProgressMergeRequest>true</skipWorkInProgressMergeRequest>
          <labelsThatForcesBuildIfAdded></labelsThatForcesBuildIfAdded>
          <setBuildDescription>true</setBuildDescription>
          <branchFilterType>All</branchFilterType>
          <includeBranchesSpec></includeBranchesSpec>
          <excludeBranchesSpec></excludeBranchesSpec>
          <sourceBranchRegex></sourceBranchRegex>
          <targetBranchRegex></targetBranchRegex>
          <secretToken>{AQAAABAAAAAwrD2XcQBBkXPfZOlFGjdRQ2wtkLE97pzmHLlLC8kV648zoiJAqUh4ZLawHgT6dnwAYJ13vLgZ5z/RBtEgtx9JRQ==}</secretToken>
          <pendingBuildName></pendingBuildName>
          <cancelPendingBuildsOnUpdate>false</cancelPendingBuildsOnUpdate>
        </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4014.vcd7dc51d8b_30">
    <script>pipeline {
    agent any
    
    environment {
        SPRING_PORT = &apos;8081&apos;
        APP_NAME = &apos;ukkikki-0.0.1-SNAPSHOT.jar&apos;
    }
    
    tools {
        gradle &quot;gradle&quot;
    }
    
    stages {
        stage(&apos;Clone&apos;){
            steps{
                git branch: &apos;develop-be&apos;, credentialsId: &apos;GitLab_User&apos;, url: &apos;https://lab.ssafy.com/s12-webmobile1-sub1/S12P11C204.git&apos;
            }
        }
        stage(&apos;Profile Build&apos;) {
            steps {
                dir(&apos;ukkikki-be/ukkikki&apos;) {
                    sh &quot;chmod 744 ./gradlew&quot;
                    sh &quot;./gradlew clean build&quot;
                }
            }
        }
        stage(&apos;Deploy&apos;) {
            steps {
                dir(&apos;ukkikki-be/ukkikki&apos;) {
                    // 기존 프로세스 종료
                    sh &apos;&apos;&apos;
                        SPRING_PID=$(pgrep -f ${APP_NAME}) || true
                        if [ ! -z &quot;$SPRING_PID&quot; ]; then
                            echo &quot;Killing existing spring boot process: $SPRING_PID&quot;
                            kill $SPRING_PID
                            sleep 5
                        fi
                    &apos;&apos;&apos;
                    
                    // JAR 파일 실행 (표준 출력 및 오류 로그 리디렉션)
                    sh &apos;&apos;&apos;
                        nohup java -Dhudson.util.ProcessTree.disable=true -jar -Dserver.port=${SPRING_PORT} build/libs/${APP_NAME} &gt; nohup.out 2&gt; nohup_err.log &amp;
                        echo $! &gt; ./application.pid
                    &apos;&apos;&apos;
                    
                    // 실행 확인
                    sh &apos;&apos;&apos;
                        sleep 10
                        # 프로세스 확인
                        ps -ef | grep ${APP_NAME} | grep -v grep || exit 1
                        
                        # PID 파일 확인
                        PID=$(cat ./application.pid)
                        if ! kill -0 $PID 2&gt;/dev/null; then
                            echo &quot;Application failed to start&quot;
                            exit 1
                        fi
                        echo &quot;Application is running with PID: $PID&quot;
                    &apos;&apos;&apos;
                }
            }
        }
    }
    post {
        success {
            echo &apos;파이프라인 성공! 배포 완료.&apos;
        }
        failure {
            echo &apos;파이프라인 실패...&apos;
            // 실패 시 로그 확인
            sh &apos;cat nohup.out&apos;
            sh &apos;cat nohup_err.log&apos;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>